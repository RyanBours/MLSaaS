directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) on SCHEMA

directive @key(
  fields: federation__FieldSet!
  resolvable: Boolean = true
) on OBJECT | INTERFACE

directive @requires(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @provides(fields: federation__FieldSet!) on FIELD_DEFINITION

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(
  name: String!
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION | SCHEMA

directive @extends on OBJECT | INTERFACE

directive @shareable on OBJECT | FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

directive @composeDirective(name: String) on SCHEMA

directive @interfaceObject on OBJECT

type User @key(fields: "id") {
  id: ID! @shareable
  username: String
}

type Query {
  user(id: Int!): User!
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

type Mutation {
  deleteUser(id: Int!): User!
}

enum link__Purpose {
  # `SECURITY` features provide metadata necessary to securely resolve fields.
  SECURITY

  # `EXECUTION` features provide metadata necessary for operation execution.
  EXECUTION
}

scalar link__Import

scalar federation__FieldSet

scalar _Any

type _Service {
  sdl: String
}

union _Entity = User
